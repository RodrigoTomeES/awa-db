---
import Pagination from '@/molecules/Pagination.astro';
import Grid from '@/organisms/Grid.astro';
import Layout from '@/layouts/Layout.astro';

import {
  getRealURL,
  marketplaceWithoutUnknownItems,
  NUM_ITEMS_BY_PAGE,
  routes,
} from '@/utils';

import type { TypeMarketItem } from '@/types';
import type { GetStaticPaths, Page } from 'astro';

export const getStaticPaths = (async ({ paginate }) =>
  paginate(marketplaceWithoutUnknownItems, {
    pageSize: NUM_ITEMS_BY_PAGE,
  })) satisfies GetStaticPaths;

export type Props = {
  page: Page<TypeMarketItem>;
};

const { page } = Astro.props;

if (Astro.url.pathname === getRealURL('/2')) page.url.prev = getRealURL('/');
---

<Layout
  title={`Marketplace, page ${page.currentPage} of ${page.lastPage}.`}
  description={`List of all items that was released in Alienware Arena Marketplace, page ${page.currentPage} of ${page.lastPage}`}
>
  {
    page.currentPage === 1 && (
      <link
        rel="canonical"
        href={`${Astro.url}`.replace(
          Astro.url.pathname,
          getRealURL(routes.index)
        )}
        slot="head"
      />
    )
  }
  <Grid items={page.data} class="mb-4" />
  <Pagination
    currentPage={page.currentPage}
    firstPage={routes.index}
    lastPage={page.lastPage}
    url={{ prev: page.url.prev, next: page.url.next }}
  />
</Layout>
